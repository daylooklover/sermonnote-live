'use client';

import React, { useState, useEffect } from 'react';
import Link from 'next/link';

export default function QuickMemoSermonPage() {
    // 1. 메모 데이터를 저장할 상태 변수
    const [memos, setMemos] = useState([]);
    // 2. 데이터 로딩 상태를 관리할 변수
    const [isLoading, setIsLoading] = useState(true);
    // 3. 에러 상태를 관리할 변수
    const [error, setError] = useState(null);

    // 4. 컴포넌트가 처음 렌더링될 때 API 호출
    useEffect(() => {
        const fetchMemos = async () => {
            try {
                // TODO: 실제 메모를 가져올 API 주소로 변경해주세요.
                const response = await fetch('/api/memos');
                if (!response.ok) {
                    throw new Error(`HTTP 오류! 상태: ${response.status}`);
                }
                const data = await response.json();
                setMemos(data); // 불러온 데이터를 상태에 저장
            } catch (err) {
                setError(err.message); // 에러 발생 시 상태에 저장
            } finally {
                setIsLoading(false); // 로딩 종료
            }
        };

        fetchMemos();
    }, []); // 빈 배열은 컴포넌트 마운트 시 한 번만 실행됨

    // 로딩 중일 때 표시할 UI
    if (isLoading) {
        return (
            <main className="min-h-screen bg-gray-900 text-white font-sans p-6 flex justify-center items-center">
                <p className="text-xl">메모를 불러오는 중입니다...</p>
            </main>
        );
    }

    // 에러 발생 시 표시할 UI
    if (error) {
        return (
            <main className="min-h-screen bg-gray-900 text-white font-sans p-6 flex justify-center items-center">
                <p className="text-xl text-red-500">메모를 불러오지 못했습니다: {error}</p>
            </main>
        );
    }

    return (
        <main className="min-h-screen bg-gray-900 text-white font-sans p-6">
            <header className="flex justify-between items-center py-4 border-b border-gray-700">
                <Link href="/sermon-selection">
                    <h1 className="text-2xl font-bold text-white cursor-pointer">SermonNote</h1>
                </Link>
                <div className="flex items-center space-x-4">
                    <button className="px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white font-semibold rounded-lg transition">뒤로가기</button>
                </div>
            </header>
            <div className="container mx-auto py-12">
                <h1 className="text-4xl font-bold text-blue-400 text-center">퀵 메모 연계 설교</h1>
                
                {/* 5. 불러온 메모 리스트를 표시 */}
                <div className="mt-8 grid gap-4 md:grid-cols-2 lg:grid-cols-3">
                    {memos.length > 0 ? (
                        memos.map((memo, index) => (
                            <div key={index} className="bg-gray-800 p-6 rounded-lg shadow-lg hover:shadow-xl transition-shadow duration-300">
                                <p className="text-gray-300 break-words">{memo.content}</p>
                            </div>
                        ))
                    ) : (
                        <p className="col-span-full text-center text-gray-400">아직 등록된 메모가 없습니다.</p>
                    )}
                </div>
            </div>
        </main>
    );
}